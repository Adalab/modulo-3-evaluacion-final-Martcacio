{"ast":null,"code":"var _jsxFileName = \"/home/adalaber/Escritorio/adalab/evaluacion3/modulo-3-evaluacion-final-Martcacio/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CharacterList from \"./CharacterList\";\nimport Filter from \"./Filter\";\nimport getDataFromApi from \"../services/api\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport logo from \"../images/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [characters, setCharacters] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [planet, setPlanet] = useState(\"all\");\n  useEffect(() => {\n    getDataFromApi().then(data => setCharacters(data));\n  }, []);\n\n  const handleFilter = dataFilter => {\n    if (dataFilter.key === \"name\") {\n      setName(dataFilter.value);\n      console.log();\n    } else if (dataFilter.key === \"planet\") {\n      setPlanet(dataFilter.value);\n    }\n  };\n\n  const filterCharacters = characters.filter(character => {\n    return character.name.toLowerCase().includes(name.toLowerCase());\n  }).filter(character => {\n    return planet === \"all\" ? true : character.planet === planet;\n  });\n\n  const renderHome = props => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: logo,\n          alt: \"Rick y Morty logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), \" \", \" \", \" \", /*#__PURE__*/_jsxDEV(Filter, {\n          className: \"filters\",\n          handleFilter: handleFilter,\n          handleReset: handleReset,\n          name: name,\n          planet: planet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 51\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(CharacterList, {\n        characters: filterCharacters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this), \" \"]\n    }, void 0, true);\n  };\n\n  const renderDetail = props => {\n    const id = parseInt(props.match.params.id);\n    const selectedCharacter = characters.find(character => {\n      return character.id === id;\n    });\n    return /*#__PURE__*/_jsxDEV(CharacterDetail, {\n      selectedCharacter: selectedCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/character/:id\",\n        render: renderDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: renderHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 12\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true);\n};\n\n_s(App, \"gctFck1+SyoXfllO8jk3onJMm3w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/adalaber/Escritorio/adalab/evaluacion3/modulo-3-evaluacion-final-Martcacio/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","CharacterList","Filter","getDataFromApi","CharacterDetail","logo","App","characters","setCharacters","name","setName","planet","setPlanet","then","data","handleFilter","dataFilter","key","value","console","log","filterCharacters","filter","character","toLowerCase","includes","renderHome","props","handleReset","renderDetail","id","parseInt","match","params","selectedCharacter","find"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CharacterList from \"./CharacterList\";\nimport Filter from \"./Filter\";\nimport getDataFromApi from \"../services/api\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport logo from \"../images/logo.png\";\n\nconst App = () => {\n    const [characters, setCharacters] = useState([]);\n    const [name, setName] = useState(\"\");\n    const [planet, setPlanet] = useState(\"all\");\n\n    useEffect(() => {\n        getDataFromApi().then((data) => setCharacters(data));\n    }, []);\n    const handleFilter = (dataFilter) => {\n        if (dataFilter.key === \"name\") {\n            setName(dataFilter.value);\n            console.log();\n        } else if (dataFilter.key === \"planet\") {\n            setPlanet(dataFilter.value);\n        }\n    };\n    const filterCharacters = characters\n        .filter((character) => {\n            return character.name.toLowerCase().includes(name.toLowerCase());\n        })\n        .filter((character) => {\n            return planet === \"all\" ? true : character.planet === planet;\n        });\n    const renderHome = (props) => {\n        return ( <\n            >\n            <\n            section className = \"header\" >\n            <\n            img className = \"logo\"\n            src = { logo }\n            alt = \"Rick y Morty logo\" / > { \" \" } <\n            Filter className = \"filters\"\n            handleFilter = { handleFilter }\n            handleReset = { handleReset }\n            name = { name }\n            planet = { planet }\n            /> <\n            /section> <\n            CharacterList characters = { filterCharacters }\n            /> <\n            />\n        );\n    };\n    const renderDetail = (props) => {\n        const id = parseInt(props.match.params.id);\n        const selectedCharacter = characters.find((character) => {\n            return character.id === id;\n        });\n        return <CharacterDetail selectedCharacter = { selectedCharacter }\n        />;\n    };\n    return ( <\n        >\n        <\n        Switch >\n        <\n        Route path = \"/character/:id\"\n        render = { renderDetail }\n        /> <\n        Route exact path = \"/\"\n        render = { renderHome }\n        /> <\n        /Switch> <\n        />\n    );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}